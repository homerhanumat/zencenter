# mysql script to initialize the zen database
# and to populate its tables with sample data

drop table if exists participant;
#@ _create the table:_
create table participant
(
  Part_ID		int primary key auto_increment,
  Part_Class	enum('member', 'visitor') not null,
  Part_Fname 	varchar(15) not null,
  Part_Mname    varchar(15) not null,
  Part_Lname    varchar(20) not null,
  Part_Address 	varchar(40),
  Part_City		varchar(15),
  Part_State    char(2),
  Part_Zip		varchar(9),
  Part_Email	varchar(50),
  Part_Phone	varchar(12)
);


#@ populate participants

insert into participant (
	Part_Class,
    Part_Fname,
    Part_Mname,
    Part_Lname,
    Part_Address,
    Part_City,
    Part_State,
    Part_Zip,
    Part_Email,
    Part_Phone
    )
    values
    ("member", "Homer", "S", "White", 
		"198 Hiawatha Trail", "Georgetown", "KY", "40324", 
        "homerhanumat@gmail.com", "502-499-2983"),
	("member", "Gloria", "M", "Estefan", 
		"202 Sunset Blvd.", "Los Angeles", "CA", "21341", 
        "gloria2356@gmail.com", "208-456-8765"),
	("member", "Ramnath", "K", "Vidyanathan", 
		"101 Pleasant St.", "Lexington", "KY", "40073", 
        "ramnath43@place.com", "859-444-6754"),
	("member", "Bettina", "A", "Grumwald", 
		"845 S. Ridge St., Apt 4B", "Lexington", "KY", "40045", 
        "luvmath89@gmail.com", null),
	("member", "Victoria", "Penelope", "Grafton", 
		"214 South Market St.", "Lexington", "KY", "40070", 
        "vickyyoga@yahoo.com", "859-347-3682"),
	("member", "Aaron", "S", "Sorkin", 
		"300 Tiny Lane", "Versailles", "KY", "41345", 
        "bigbadwolf@yahoo.com", "877-657-4352"),
	("member", "Sita", "V", "Patel", 
		"504 East Main St.", "Lexington", "KY", "40071", 
        "sittingsita@gmail.com", "859-245-7906"),
	("member", "Catherine", "M", "Colalillo", 
		"823 Mount Hebron Pike", "Frankfort", "KY", "41356", 
        "cathy4567@yahoo.com", "859-347-3682"),
	("visitor", "Quincy", "Peter", "Martin", 
		"345 S. Landsdowne Rd.", "Lexington", "KY", "40065", 
        "quincydbgeek@yahoo.com", "859-777-9091"),
	("visitor", "Adriana", "L", "LaRue", 
		"2345 N. Limestone St.", "Lexington", "KY", "40067", 
        "floatingfish@gmail.com", "859-675-8731"),
	("visitor", "Felicia", "C", "Clark", 
		"314 Narrow Ridge Rd.", "Stamping Ground", "KY", "40456", 
        "happyfelicia@yahoo.com", null);

drop table if exists event;
#@ _create the table:_
create table event
(
  Event_ID			int primary key auto_increment,
  Event_Type		varchar(15),
  Event_Location 	varchar(20),
  Event_Start    	datetime,
  Event_End    		datetime,
  Event_Cost		decimal(6,2),
  Part_ID			int,
  foreign key (Part_ID) references participant(Part_ID)
);

#@ populate event:
#@ datetimes like this:  YYYY-MM-DD HH:MM:SS
insert into Event (Event_Type, Event_Location, Event_Start, Event_End, Event_Cost, Part_ID)
	values
    ("retreat", "Ageless Yoga Studio", "2016-01-26 09:00:00", "2016-01-26 16:00:00", 70.00, 2),
    ("retreat", "Ageless Yoga Studio", "2016-03-15 09:00:00", "2016-03-15 16:00:00", 70.00, 2),
    ("retreat", "Ageless Yoga Studio", "2016-07-06 09:00:00", "2016-07-06 16:00:00", 70.00, 3),
    ("retreat", "Ageless Yoga Studio", "2016-12-15 09:00:00", "2016-12-15 16:00:00", 35.00, 3),
    ("retreat", "Ageless Yoga Studio", "2017-01-30 09:00:00", "2017-01-30 16:00:00", 35.00, 3),
	("retreat", "Ageless Yoga Studio", "2017-04-28 09:00:00", "2017-04-28 16:00:00", 35.00, 2),
    ("retreat", "Ageless Yoga Studio", "2017-06-12 09:00:00", "2017-06-12 16:00:00", 35.00, 4),
    ("sangha", "Ramnath's place", "2016-02-05 19:00:00", "2016-02-05 21:00:00", null, 3),
    ("sangha", "Ramnath's place", "2016-07-10 19:00:00", "2016-07-10 21:00:00", null, 3),
    ("sangha", "Ramnath's place", "2016-11-12 19:00:00", "2016-11-12 21:00:00", null, 3),
    ("sangha", "Ramnath's place", "2017-02-10 19:00:00", "2017-02-10 21:00:00", null, 3),
    ("potluck", "Jacobson Park", "2016-04-20 17:00:00", "2016-04-20 20:00:00", null, 5),
    ("potluck", "Jacobson Park", "2016-06-21 17:00:00", "2016-06-21 20:00:00", null, 5),
    ("potluck", "Jacobson Park", "2016-08-13 17:00:00", "2016-08-13 20:00:00", null, 5),
    ("potluck", "Jacobson Park", "2017-04-19 17:00:00", "2017-04-19 20:00:00", null, 5);
    
drop table if exists event_participation;
#@ _create the table:_
create table event_participation
(
  Part_ID			int,
  Event_ID			int,
  EP_Amount_Paid 	decimal(6,2),
  EP_Notes    		varchar(100),
  EP_Attended       enum('yes','no'),
  primary key (Part_ID, Event_ID),
  foreign key (Part_ID) references participant(Part_ID),
  foreign key (Event_ID) references event(Event_ID)
);

#@ populate the table:

insert into event_participation (Part_ID, Event_ID, EP_Amount_Paid, EP_Notes, EP_Attended)
	values
    (3, 16, 70.00, "bringing salad", "yes"),
    (4, 16, 50.00, "bringing beans", "yes"),
    (5, 16, 70.00, "bringing dessert", "yes"),
    (6, 16, 70.00, "bringing tea", "yes"),
    (7, 16, 0.00, "bringing forks", "no"),
    (8, 16, 45.00, "bringing fruit", "yes"),
    (10, 16, 70.00, null, "yes"),
    (11, 16, 70.00, null, "yes"),
    (1, 16, 70.00, "bringing lentils", "yes"),
    (3, 17, 70.00, "bringing salad", "yes"),
    (4, 17, 50.00, "bringing beans", "yes"),
    (5, 17, 70.00, "bringing dessert", "yes"),
    (6, 17, 70.00, "bringing tea", "yes"),
    (7, 17, 60.00, "bringing forks", "yes"),
    (8, 17, 45.00, "bringing fruit", "yes"),
    (10, 17, 70.00, null, "yes"),
    (11, 17, 70.00, null, "no"),
    (1, 17, 70.00, "bringing lentils", "yes"),
    (3, 18, 70.00, "bringing salad", "yes"),
    (4, 18, 0.00, "bringing beans", "no"),
    (5, 18, 70.00, "bringing dessert", "yes"),
    (6, 18, 70.00, "bringing tea", "yes"),
    (7, 18, 0.00, "bringing forks", "yes"),
    (8, 18, 45.00, "bringing fruit", "yes"),
    (10, 18, 70.00, null, "yes"),
    (11, 18, 70.00, null, "yes"),
    (1, 18, 70.00, "bringing lentils", "yes"),
    (3, 19, 35.00, "bringing salad", "yes"),
    (4, 19, 35.00, "bringing beans", "yes"),
    (5, 19, 35.00, "bringing dessert", "yes"),
    (6, 19, 35.00, "bringing tea", "yes"),
    (7, 19, 35.00, "bringing forks", "yes"),
    (8, 19, 10.00, "bringing fruit", "yes"),
    (10, 19, 35.00, null, "yes"),
    (11, 19, 35.00, null, "yes"),
    (3, 20, 35.00, "bringing salad", "yes"),
    (4, 20, 30.00, "bringing beans", "yes"),
    (5, 20, 35.00, "bringing dessert", "yes"),
    (6, 20, 35.00, "bringing tea", "yes"),
    (7, 20, 30.00, "bringing forks", "yes"),
    (8, 20, 10.00, "bringing fruit", "yes"),
    (10, 20, 30.00, null, "yes"),
    (11, 20, 20.00, null, "yes"),
    (3, 21, 35.00, "bringing salad", "yes"),
    (4, 21, 25.00, "bringing beans", "yes"),
    (5, 21, 35.00, "bringing dessert", "yes"),
    (6, 21, 35.00, "bringing tea", "yes"),
    (7, 21, 30.00, "bringing forks", "yes"),
    (8, 21, 20.00, "bringing fruit", "yes"),
    (10, 21, 25.00, null, "yes"),
    (1, 21, 35.00, "bringing lentils", "yes"),
    (3, 22, 35.00, "bringing salad", "yes"),
    (4, 22, 25.00, "bringing beans", "yes"),
    (5, 22, 35.00, "bringing dessert", "yes"),
    (6, 22, 35.00, "bringing tea", "yes"),
    (7, 22, 20.00, "bringing forks", "yes"),
    (8, 22, 20.00, "bringing fruit", "yes"),
    (10, 22, 25.00, null, "yes"),
    (1, 22, 35.00, "bringing lentils", "yes"),
    (1, 23, null, null, "yes"),
    (2, 23, null, null, "yes"),
    (3, 23, null, null, "yes"),
    (4, 23, null, null, "yes"),
    (5, 23, null, null, "yes"),
    (6, 23, null, null, "yes"),
    (1, 24, null, null, "yes"),
    (2, 24, null, null, "no"),
    (3, 24, null, null, "yes"),
    (4, 24, null, null, "yes"),
    (5, 24, null, null, "yes"),
    (6, 24, null, null, "yes"),
    (1, 25, null, null, "yes"),
    (2, 25, null, null, "yes"),
    (3, 25, null, null, "yes"),
    (4, 25, null, null, "yes"),
    (5, 25, null, null, "yes"),
    (6, 25, null, null, "no"),
    (1, 26, null, null, "yes"),
    (2, 26, null, null, "no"),
    (3, 26, null, null, "yes"),
    (4, 26, null, null, "yes"),
    (5, 26, null, null, "yes"),
    (6, 26, null, null, "yes"),
    (1, 27, null, "bringing duck", "yes"),
    (3, 27, null, "bringing pig", "yes"),
    (5, 27, null, "bringing goat", "yes"),
    (7, 27, null, "bringing snakes", "yes"),
    (9, 27, null, "bringing tarantulas", "yes"),
    (11, 27, null, "bringing oats", "yes"),
    (1, 28, null, "bringing duck", "yes"),
    (3, 28, null, "bringing pig", "yes"),
    (5, 28, null, "bringing goat", "yes"),
    (7, 28, null, "bringing snakes", "yes"),
    (9, 28, null, "bringing tarantulas", "no"),
    (11, 28, null, "bringing oats", "yes"),
    (1, 29, null, "bringing duck", "yes"),
    (3, 29, null, "bringing pig", "no"),
    (5, 29, null, "bringing goat", "yes"),
    (7, 29, null, "bringing snakes", "yes"),
    (9, 29, null, "bringing tarantulas", "yes"),
    (11, 29, null, "bringing oats", "yes"),
    (1, 30, null, "bringing duck", "yes"),
    (3, 30, null, "bringing pig", "yes"),
    (5, 30, null, "bringing goat", "yes"),
    (7, 30, null, "bringing snakes", "yes"),
    (9, 30, null, "bringing tarantulas", "yes"),
    (11, 30, null, "bringing oats", "yes");
    

drop table if exists donation;
#@ _create the table:_
create table donation
(
  Don_ID			int primary key auto_increment,
  Part_ID			int,
  Don_Amount 		decimal(6,2),
  Don_Date    		date,
  Don_Form          enum('check','cash','card','eft','other'),
  foreign key (Part_ID) references participant(Part_ID)
);

insert into donation (Part_ID, Don_Amount, Don_Date, Don_Form)
	values
    (1, 25.00, '2016-01-30', "check"),
    (1, 25.00, '2016-02-28', "check"),
    (1, 25.00, '2016-03-30', "check"),
    (1, 25.00, '2016-04-30', "check"),
    (1, 25.00, '2016-05-30', "check"),
    (1, 25.00, '2016-06-30', "check"),
    (1, 25.00, '2016-07-30', "check"),
    (1, 25.00, '2016-08-30', "check"),
    (1, 25.00, '2016-09-30', "check"),
    (1, 25.00, '2016-10-30', "check"),
    (1, 25.00, '2016-11-30', "check"),
    (1, 25.00, '2016-12-30', "check"),
    (1, 30.00, '2017-01-15', "check"),
    (1, 30.00, '2017-02-15', "check"),
    (1, 30.00, '2017-03-15', "check"),
    (1, 30.00, '2017-04-15', "check"),
    (1, 30.00, '2017-05-15', "check"),
    (1, 30.00, '2017-06-15', "check"),
    (2, 20.00, '2016-01-30', "check"),
    (2, 20.00, '2016-02-28', "check"),
    (2, 20.00, '2016-03-30', "check"),
    (2, 20.00, '2016-04-30', "check"),
    (2, 20.00, '2016-05-30', "check"),
    (2, 20.00, '2016-06-30', "check"),
    (2, 20.00, '2016-07-30', "check"),
    (2, 20.00, '2016-08-30', "check"),
    (2, 20.00, '2016-09-30', "check"),
    (2, 20.00, '2016-10-30', "check"),
    (2, 20.00, '2016-11-30', "check"),
    (2, 20.00, '2016-12-30', "check"),
    (2, 25.00, '2017-01-15', "check"),
    (2, 25.00, '2017-02-15', "check"),
    (2, 25.00, '2017-03-15', "check"),
    (2, 25.00, '2017-04-15', "check"),
    (2, 25.00, '2017-05-15', "check"),
    (2, 25.00, '2017-06-15', "check"),
    (3, 50.00, '2016-03-10', "check"),
    (3, 50.00, '2016-06-10', "check"),
    (3, 50.00, '2016-09-10', "check"),
    (3, 50.00, '2016-12-10', "check"),
    (3, 50.00, '2017-03-10', "check"),
    (3, 50.00, '2017-06-10', "check"),
    (4, 50.00, '2016-03-10', "check"),
    (4, 50.00, '2016-06-10', "check"),
    (4, 50.00, '2016-09-10', "check"),
    (4, 50.00, '2016-12-10', "check"),
    (4, 50.00, '2017-03-10', "check"),
    (4, 50.00, '2017-06-10', "check"),
    (5, 90.00, '2016-02-13', "cash"),
    (5, 90.00, '2016-08-13', "check"),
    (5, 90.00, '2017-02-13', "cash"),
    (5, 90.00, '2016-03-14', "cash"),
    (5, 90.00, '2016-08-14', "check"),
    (5, 90.00, '2017-03-14', "cash"),
    (6, 100.00, '2016-01-01', "check"),
    (6, 100.00, '2016-07-01', "check"),
    (6, 100.00, '2017-01-01', "check"),
    (7, 110.00, '2016-03-05', "check"),
    (7, 90.00, '2016-10-05', "check"),
    (7, 95.00, '2017-03-05', "check"),
    (8, 200.00, '2016-05-25', "check"),
    (8, 200.00, '2017-05-25', "check"),
    (9, 250.00, '2016-12-30', "check"),
    (9, 300.00, '2016-12-15', "check"),
    (10, 500.00, '2016-12-15', "check"),
    (11, 450.00, '2017-04-25', "check");
    
commit;